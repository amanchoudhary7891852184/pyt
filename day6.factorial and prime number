{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "86f88a9b-9e91-4db8-9502-6d4f1ab281af",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "number div 1\n",
      "number div 2\n",
      "number div 4\n"
     ]
    }
   ],
   "source": [
    "n=8\n",
    "for i in range(1,8,1):\n",
    "    if (n%i==0):\n",
    "        print(\"number div\",i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "423bcc94-6f75-4162-adc7-995d6bb24c48",
   "metadata": {},
   "outputs": [],
   "source": [
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "e25482f2-5075-44cf-b5d8-6f4d26369c82",
   "metadata": {},
   "outputs": [],
   "source": [
    "i=0\n",
    "n=0\n",
    "while(n<8):\n",
    "    if (n%i==0):\n",
    "        print(i)\n",
    "    i+=1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "91581397-c66c-4f33-a75b-6883b3fb5279",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "0c2b5792-1118-421b-906a-e99da74abb34",
   "metadata": {},
   "source": [
    " ## factor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "405ffae2-c9d0-40b4-bed0-e4f37b5b8c4f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter your number: 10\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "2\n",
      "5\n",
      "10\n"
     ]
    }
   ],
   "source": [
    "n=int(input(\"enter your number:\"))\n",
    "for i in range(1,n+1):\n",
    "    if(n%i==0):\n",
    "        print(i)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0554ae93-ef4c-41c0-9869-8f0108fba525",
   "metadata": {},
   "source": [
    "## prime"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "id": "6df32787-cf8b-44d2-88d5-853241e5bd57",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter your number: 7892\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2  not prime\n"
     ]
    }
   ],
   "source": [
    "n=int(input(\"enter your number:\"))\n",
    "indicator=0\n",
    "for i in range(2,n):\n",
    "    if(n%i==0 ):\n",
    "        print(i,\" not prime\")\n",
    "        indicator=1\n",
    "        break\n",
    "if(indicator==0):\n",
    "        print(\"prime\",n)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "id": "28ef898e-42df-4866-8eef-3a8c87491439",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3\n"
     ]
    }
   ],
   "source": [
    "n=27\n",
    "for i in range(2,10):\n",
    "    if (n%i==0):\n",
    "        print(i)\n",
    "        break"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "id": "ac5d8446-5ed9-4c26-a491-528a229ec4af",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter your number : 40\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "2\n",
      "4\n",
      "5\n",
      "8\n",
      "10\n",
      "20\n",
      "40\n",
      "90\n"
     ]
    }
   ],
   "source": [
    "n=int(input(\"enter your number :\"))\n",
    "s=0\n",
    "for i in range(1,n+1):\n",
    "    if(n%i==0):\n",
    "        print(i)\n",
    "        s+=i\n",
    "print(s)\n",
    "        \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b272e832-320d-4f01-87f5-cab797998b38",
   "metadata": {},
   "outputs": [],
   "source": [
    "Write a Python Program to Find the Factorial of a Number.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "5ccc0ee3-462f-45c1-b693-a80db5582f47",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "2\n",
      "6\n",
      "24\n",
      "120\n",
      "720\n",
      "5040\n",
      "40320\n"
     ]
    }
   ],
   "source": [
    "fact=1\n",
    "for i in range(1,9):\n",
    "    fact=fact*i\n",
    "    print(fact)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b25b235a-ba6a-42d0-ad2e-67bfa9b6e1da",
   "metadata": {},
   "outputs": [],
   "source": [
    "    "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
