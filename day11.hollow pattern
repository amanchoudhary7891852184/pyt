{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "ba341049-5f04-4015-adce-f507dd08b4e6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "* * * * * \n",
      "  * * * * \n",
      "    * * * \n",
      "      * * \n",
      "        * \n"
     ]
    }
   ],
   "source": [
    "for i in range (5,0,-1):\n",
    "    for j in range (i,5):\n",
    "        print(\" \",end = \" \")\n",
    "\n",
    "    for k in range (1,i+1):\n",
    "        print(\"*\",end= \" \")\n",
    "\n",
    "    print()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "43e57415-f4d9-4512-98cf-2051a04f521b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "* * * * * \n",
      "- *     * \n",
      "- - *   * \n",
      "- - - * * \n",
      "- - - - * \n"
     ]
    }
   ],
   "source": [
    "for i in range(1,6):\n",
    "    for j in range(1,i):\n",
    "        print(\"-\",end=\" \")\n",
    "    for k in range(i,6):\n",
    "        if (i==1 or k==5 or i==k):\n",
    "            print(\"*\",end=\" \")\n",
    "        else:\n",
    "            print(\" \",end=\" \")\n",
    "    print()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "cc9475ae-eabb-40c8-9073-3bc21eea88a6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- - - - * \n",
      "- - - * * \n",
      "- - *   * \n",
      "- *     * \n",
      "* * * * * \n"
     ]
    }
   ],
   "source": [
    "for i in range(1,6):\n",
    "    for j in range(i,5):\n",
    "        print(\"-\",end=\" \")\n",
    "    for k in range(1,i+1):\n",
    "        if (k==1 or i==5 or k==i):\n",
    "            print(\"*\",end=\" \")\n",
    "        else:\n",
    "            print(\" \",end=\" \")\n",
    "    print( )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "8e3b3750-d183-4d85-a64e-9249083ca65c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0\n",
      "1\n",
      "2\n",
      "3\n",
      "4\n",
      "5\n"
     ]
    }
   ],
   "source": [
    "s=\"rajasthan\"\n",
    "for i in range(0,6):\n",
    "    print(i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "2454d295-4de9-4872-a887-8d915f035e48",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0 a\n",
      "1 b\n",
      "2 c\n",
      "3 d\n",
      "4 e\n",
      "5 f\n"
     ]
    }
   ],
   "source": [
    "data='abcdef'\n",
    "data[2]\n",
    "for i in range(0,6):\n",
    "    print(i,data[i])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1f3beb63-cfe6-4971-87bc-94233c8d809d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "id": "ab758f4c-7816-4a8a-8ad7-56ba3cf792a0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5 f\n",
      "4 e\n",
      "3 d\n",
      "2 c\n",
      "1 b\n",
      "0 a\n",
      " fedcba\n"
     ]
    }
   ],
   "source": [
    "data='abcdef'\n",
    "word=\" \"\n",
    "for i in range(5,-1,-1):\n",
    "    print(i,data[i])\n",
    "    word=word+data[i]\n",
    "print(word)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "id": "5bb548a4-040f-4c70-b270-9da22775efe7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0 r\n",
      "1 a\n",
      "2 j\n",
      "3 a\n",
      "4 s\n",
      "5 t\n",
      "6 h\n",
      "7 a\n",
      "8 n\n",
      "9  \n",
      "10 h\n",
      "11 e\n",
      "12 l\n",
      "13 l\n",
      "14 o\n",
      " rajasthan hello\n"
     ]
    }
   ],
   "source": [
    "s=\"rajasthan hello \"\n",
    "r=\" \"\n",
    "for i in range(0,15):\n",
    "    print(i,s[i])\n",
    "    r=r+s[i]\n",
    "print(r)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 197,
   "id": "87c038d4-cd5b-44aa-b5de-829df57f7405",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " s\n",
      " sa\n",
      " sar\n",
      " sara\n",
      " saras\n",
      "not\n"
     ]
    }
   ],
   "source": [
    "s=\"saras\"\n",
    "d=\" \"\n",
    "for i in range(0,len(s)):\n",
    "    d+=s[i]\n",
    "    print(d)\n",
    "if (s==d):\n",
    "    print(\"pal\")\n",
    "else:\n",
    "    print('not')\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5a1c14d7-8cb5-48eb-b144-cf53b8ff0dae",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
