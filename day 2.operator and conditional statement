{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "502fa8c6-3982-48c2-8c28-47239c9dc676",
   "metadata": {},
   "outputs": [],
   "source": [
    "##operator and conditional statement \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "2208be4b-7d0b-42db-9d1b-7dd0b7d4e988",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "10//2\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "76c79220-78b9-4095-9fee-b20c11d0e9cd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "21.0"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#float=> 8 byte\n",
    "20+1.0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "6e5963a6-db92-490e-8b73-5dc87c9f6fdb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.0"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "10+3-2*5/1-2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "090afd99-7291-460c-b790-a5c0c6003f49",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x=10\n",
    "x==20"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "90ae73ff-38ab-47fa-905e-b3fb1fea7b81",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X=10\n",
    "(X>5 and X>12) or X==10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "407293d9-02fa-4da1-857f-c7a0e8832464",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'y'in 'yash'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "0dca8223-c4fa-49f1-9709-c739fc640721",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'Y'in 'yash'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "ee4b87e7-cad5-4250-97c4-ae70bf6a61c1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "10 in [10,20,30]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "ea469ce5-8a43-44ca-8a44-9cb36d47c384",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "10 not in [20,40]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "1629478f-507c-4b44-b8b8-d560960f1e8f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(10, False)"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "10,20 not in [20,40]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "3588ec43-951f-451e-9712-fbecf291e39e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "140735292398296"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x=10\n",
    "id(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "8115b896-608a-4aa4-8f8d-45a4ed11aec3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'str'>\n"
     ]
    }
   ],
   "source": [
    "x='ansQ'\n",
    "print(type(x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "f59fd0ec-d0ee-4eb6-b011-068d057f54d4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "140735292401176\n"
     ]
    }
   ],
   "source": [
    "x=100\n",
    "print(id(x))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6c31a8b2-03d5-4f64-99a8-d4c171be2d95",
   "metadata": {},
   "source": [
    "## conditional statement \n",
    "                    ##--> to find the condition \n",
    "                    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "4e3323e4-a715-44a1-8686-013d51a17831",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter your number 4\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "even\n"
     ]
    }
   ],
   "source": [
    "n=int(input(\"enter your number\"))\n",
    "if (n%2==0): \n",
    "      print(\"even\")\n",
    "else:\n",
    "    print(\"not\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "067d5915-14ab-4764-b292-ecb60ac72c34",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "hello\n"
     ]
    }
   ],
   "source": [
    "if(True):\n",
    "    print(\"hello\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "d35c44fd-457a-42ba-8cc2-93c269eafab1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter your number 11\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "not\n"
     ]
    }
   ],
   "source": [
    "n=int(input(\"enter your number\"))\n",
    "if (n%2==0 and n%5==0): \n",
    "      print(\"div\")\n",
    "else:\n",
    "    print(\"not\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "d7127793-39a1-451f-91b4-4ed952b5640d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter your number 1\n",
      "enter your number 1\n",
      "enter your number 1\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "eq\n"
     ]
    }
   ],
   "source": [
    "n1=int(input(\"enter your number\"))\n",
    "n2=int(input(\"enter your number\"))\n",
    "n3=int(input(\"enter your number\"))\n",
    "if (n1>n2 and n1>n3): \n",
    "      print(\"n1\")\n",
    "elif(n2>n1 and n2>n3) :\n",
    "    print(\"n2\")\n",
    "elif(n2==n1 and n1==n3 and n3==n2 ) :\n",
    "    print(\"eq\")  \n",
    "else:\n",
    "    print(\"n3\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "85713c1c-afd2-4bd8-802b-24b3231e6bba",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3fa4f75a-c0b6-4875-8797-18e607fdcaa6",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fca3574e-94b9-474e-8927-765235b0ce1f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "142c104e-d46b-4df3-a520-90fafde2074f",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
